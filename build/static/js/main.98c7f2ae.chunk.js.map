{"version":3,"sources":["assets/rxicon.png","redux/actions/constants.js","redux/reducers/userReducers.js","redux/reducers/index.js","redux/store.js","pages/title.js","utils.js","constants/index.js","apis/index.js","redux/actions/user.js","components/LoadingIndicator.js","pages/Login.js","pages/Register.js","elements/header.js","elements/PatientSidebar.js","pages/DoctorSearch.js","elements/DoctorSideBar.js","utils/icons.js","pages/Profile.js","pages/Appointments.js","App.js","index.js"],"names":["module","exports","initialState","user","token","rootReducer","combineReducers","userDetails","state","arguments","length","undefined","action","type","_objectSpread","data","persistConfig","key","storage","middlewares","logger","push","persist","persistReducer","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","persistStore","TitleComponent","_ref","title","React","createElement","Helmet","charSet","setItemHelper","setState","value","LOGIN","REGISTER","GETUSERTYPES","GETDEPARTMENTS","GETDOCTORS","UPDATEUSER","GETSLOTS","BOOKSLOT","APPOINTMENTS","SAVEPRESCRIPTION","UPLOAD","api","method","url","axios","defaults","headers","Authorization","concat","credentials","then","res","catch","err","getDepartments","constants","addUser","accessData","dispatch","updateUser","isLoading","small","children","normalStyles","padding","margin","width","smallStyles","styles","style","Spinner","animation","role","variant","Fragment","Login","useDispatch","setstate","useState","email","password","redirect","authError","location","className","onSubmit","event","preventDefault","success","message","id","placeholder","name","onChange","e","target","autoFocus","required","htmlFor","disabled","LoadingIndicator","Link","to","renderRedirect","Redirect","Register","userTypes","setuserTypes","departments","setdepartments","setisLoading","useEffect","fetchUserTypes","fetchDepartments","selected","map","u","label","userTypeId","aria-hidden","Header","onClick","stopPropagation","useLocation","pathname","Doctor","doctor","useSelector","s","isModalOpen","setisModalOpen","date","setdate","slots","setslots","selectedSlot","setSelectedSlot","description","setdescription","loading","setloading","history","useHistory","fetchSlots","doctorId","Card","minHeight","photo","height","borderRadius","src","alt","Avatar","color","round","size","department","fontSize","overflow","ReactHtmlParser","about","Button","Modal","centered","show","onHide","closeButton","Body","Form","Group","controlId","Label","DatePicker","dateFormat","minDate","moment","toDate","newDate","Select","options","a","booked","startTime","format","reverse","isMulti","isClearable","isOptionDisabled","option","ReactQuill","v","Footer","handleBookSlot","patientId","slotId","Date","DoctorSearch","filters","setfilters","doctors","setdoctors","setFilterField","fetchDoctors","gender","Sidebar","Control","d","uncheckedIcon","viewBox","position","top","fill","fillRule","checkedIcon","Profile","fileUploader","useRef","console","log","handleFileUpload","FormData","append","files","uploadUserPic","response","alert","PatientSidebar","ref","cursor","current","click","Switch","onColor","checked","openForAppointments","departmentId","phone","handleUpdateSave","AppointmentCard","app","appointment","setappointment","patient","slot","setAppointment","rxIcon","opacity","right","diff","dob","createdAt","fontWeight","prescription","handleSavePrescription","appointmentId","Appointments","appointments","setappointments","fetchAppointments","DocSidebar","view","unauthenticated","Route","exact","path","component","Router","ReactDOM","render","Provider","App","document","getElementById"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,oC,sMCApC,MCMDC,EAAe,CACnBC,KAAM,KACNC,MAAO,MCAMC,MAJKC,YAAgB,CAChCC,YDMW,WAAmC,IAAlCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGP,EAAcU,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOC,MACb,IDbiB,QCcf,OAAAC,wBAAA,GACKN,GAAK,IACRL,KAAMS,EAAOG,KAAKZ,KAClBC,MAAOQ,EAAOG,KAAKX,QAEvB,IDlBkB,SCmBhB,OAAAU,wBAAA,GACKN,GAAK,IACRL,KAAM,KACNC,MAAO,OAGX,IDxBqB,YCyBnB,OAAAU,wBAAA,GAAYN,GAAK,IAAEL,KAAMS,EAAOG,KAAKZ,OAEvC,QACE,OAAOK,M,6CExBb,MAAMQ,EAAgB,CAClBC,IAAK,mBACLC,aAGEC,EAAc,CAACd,EAAae,KAClCD,EAAYE,KAAKD,KACjB,MAAME,EAAUC,YAAeP,KAAkBG,GAGpCK,EAFqBC,YAAgBC,IAAhBD,CAAuBE,IAEpCC,CAA0BN,GACtBO,YAAaL,G,+ECJvBM,MAVQC,IAAc,IAAb,MAACC,GAAMD,EAE3B,OACIE,IAAAC,cAACC,IAAM,KACHF,IAAAC,cAAA,QAAME,QAAQ,UACdH,IAAAC,cAAA,aAAQF,GAJG,sBCJhB,SAASK,EAAc7B,EAAO8B,GAUjC,OATiBrB,GACLsB,IACJD,EAAQxB,wBAAC,GACFN,GAAK,IACR,CAACS,GAAMsB,M,sBCLR,EACR,CACHC,MAAO,YACPC,SAAU,eACVC,aAAc,gBACdC,eAAgB,kBAChBC,WAAY,cACZC,WAAY,aACZC,SAAU,gBACVC,SAAU,gBACVC,aAAc,mBACdC,iBAAkB,mBAClBC,OAAQ,eCPZ,MAAMC,EAAM,SAACC,EAAQC,GAAoC,IAA/BtC,EAAIN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAML,EAAKK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAQ7C,OAPIL,IACFkD,IAAMC,SAASC,QAAU,CACvB,eAAgB,mBAChBC,cAAc,UAADC,OAAYtD,GACzBuD,aAAa,IAGVL,IAAM,CACXF,OAAQA,EACRC,IAAI,GAADK,OAZS,0BAYKA,OAAGL,GACpBtC,KAAMA,IAEL6C,KAAKC,GACGA,GAERC,MAAMC,IACL,MAAMA,KAkCCC,EAAiBA,IACrBb,EAAI,MAAOc,EAActB,gBAC7BiB,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,IC5DCG,EAAWC,GACdC,IACNA,EAAS,CAAEvD,KRJM,QQIOE,KAAMoD,KAUrBE,EAAcF,GACjBC,GACCA,EAAS,CAAEvD,KRdG,YQccE,KAAMoD,I,aCb9BpC,MAAqC,IAApC,UAAEuC,EAAS,MAAEC,EAAK,SAAEC,GAAUzC,EAC5C,MAAM0C,EAAe,CACnBC,QAAS,OACTC,OAAQ,SACRC,MAAO,QAGHC,EAAW/D,wBAAA,GACZ2D,GAAY,IACfG,MAAO,SAGHE,EAASP,EAAQM,EAAcJ,EAErC,OAAOH,EACLrC,IAAAC,cAAA,OAAK6C,MAAOD,GACV7C,IAAAC,cAAC8C,IAAO,CAACC,UAAU,SAASC,KAAK,SAASC,QAAQ,aAGpDlD,IAAAC,cAAAD,IAAAmD,SAAA,KAAE,IAAEZ,EAAS,MCgFFa,MA7FDA,KACZ,MAAMjB,EAAWkB,eACV9E,EAAO+E,GAAYC,mBAAS,CACjCC,MAAO,GACPC,SAAU,GACVC,UAAU,EACVC,WAAW,EACXtB,WAAW,EACXuB,SAAU,KAGNvD,EAAWD,EAAc7B,EAAO+E,GAoBhCjB,EAAY9D,EAAM8D,UACxB,OACErC,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAACJ,EAAc,CAACE,MAAM,4BACtBC,IAAAC,cAAA,OAAK4D,UAAU,gCACb7D,IAAAC,cAAA,OAAK4D,UAAU,eAAc,SAC7B7D,IAAAC,cAAA,OAAK4D,UAAU,aACZtF,EAAMoF,WAAa3D,IAAAC,cAAA,OAAK4D,UAAW,sBAAuBtF,EAAMoF,WAIjE3D,IAAAC,cAAA,QAAM6D,SA7BQC,IHIHjF,MGHjBiF,EAAMC,iBACN3D,EAAS,YAATA,CAAsB,KHELvB,EGDXP,EHED2C,EAAI,OAAQc,EAAczB,MAAOzB,GACrC6C,KAAKC,GACGA,EAAI9C,MAEZ+C,MAAMC,IACL,MAAMA,KGPKH,KAAMC,IACbA,EAAIqC,QACN9B,EAASF,EAAQL,IAEjBvB,EAAS,YAATA,CAAsBuB,EAAIsC,aAuBtBlE,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,aACHC,YAAY,gBACZxF,KAAK,OACLyF,KAAK,QACLC,SAAWC,GAAMlE,EAAS,QAATA,CAAkBkE,EAAEC,OAAOlE,OAC5CmE,WAAS,EACTC,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,cAAa,iBAC5B3E,IAAAC,cAAA,OAAK4D,UAAU,oBAAmB,mCAGtC7D,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACErB,KAAK,WACLiF,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,gBACHC,YAAY,SACZC,KAAK,WACLC,SAAWC,GAAMlE,EAAS,WAATA,CAAqBkE,EAAEC,OAAOlE,OAC/CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,iBAAgB,YAC/B3E,IAAAC,cAAA,OAAK4D,UAAU,oBAAmB,sCAGtC7D,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,UAAQ4D,UAAU,4BAA4BjF,KAAK,SAASgG,WAAUrG,EAAM8D,WAA0B,qBAEpGrC,IAAAC,cAAC4E,EAAgB,CAACxC,UAAWA,OAInCrC,IAAAC,cAAA,OAAK4D,UAAU,eACb7D,IAAAC,cAAC6E,IAAI,CAACjB,UAAU,qBAAqBkB,GAAI,YAAY,0BAzDxCC,MACrB,GAAIzG,EAAMmF,SACR,OAAO1D,IAAAC,cAACgF,IAAQ,CAACF,GAAG,gBA6DnBC,KCuIQE,MA/NEA,KACf,MAAM/C,EAAWkB,eACV9E,EAAO+E,GAAYC,mBAAS,CACjCC,MAAO,GACPC,SAAU,GACVC,UAAU,EACVC,WAAW,EACXC,SAAU,MAGLuB,EAAWC,GAAgB7B,mBAAS,KACpC8B,EAAaC,GAAkB/B,mBAAS,KACxClB,EAAWkD,GAAgBhC,oBAAS,GACrClD,EAAWD,EAAc7B,EAAO+E,GAItCkC,oBAAU,KACRC,IACAC,KACC,IAEH,MAYMD,EAAiBA,KACrBF,GAAa,GJGRrE,EAAI,MAAOc,EAAcvB,cAC7BkB,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,IIPOH,KAAMC,IACfA,EAAIqC,UACNsB,GAAa,GACbH,EAAaxD,EAAIuD,eAKjBO,EAAmBA,KACvBH,GAAa,GACbxD,IAAiBJ,KAAMC,IACjBA,EAAIqC,UACNsB,GAAa,GACbD,EAAe1D,EAAIyD,iBAMzB,OACErF,IAAAC,cAAC4E,EAAgB,CAACxC,UAAWA,GAC3BrC,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAACJ,EAAc,CAACE,MAAM,aACtBC,IAAAC,cAAA,OAAK4D,UAAU,gCACb7D,IAAAC,cAAA,OAAK4D,UAAU,eAAc,YAC7B7D,IAAAC,cAAA,OAAK4D,UAAU,cACXtF,EAAMoF,WAAapF,EAAM0F,UACzBjE,IAAAC,cAAA,OAAK4D,UAAW,UAAYtF,EAAMoF,UAAY,eAAiB,kBAC5DpF,EAAMoF,WAAapF,EAAM0F,SAG9BjE,IAAAC,cAAA,QAAM6D,SA7CMC,IJKCjF,MIJrBiF,EAAMC,iBACN3D,EAAS,YAATA,CAAsB,KJGDvB,EIFZP,EJGJ2C,EAAI,OAAQc,EAAcxB,SAAU1B,GACxC6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,KIRQH,KAAMC,IAChBA,EAAIqC,QACN9B,EAASF,EAAQL,IAEjBvB,EAAS,YAATA,CAAsBuB,EAAIsC,aAuCpBlE,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,YACHC,YAAY,OACZxF,KAAK,OACLyF,KAAK,OACLC,SAAWC,GAAMlE,EAAS,OAATA,CAAiBkE,EAAEC,OAAOlE,OAC3CmE,WAAS,EACTC,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,aAAY,UAG/B3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,WACHC,YAAY,MACZxF,KAAK,OACLyF,KAAK,MACLC,SAAWC,GAAMlE,EAAS,MAATA,CAAgBkE,EAAEC,OAAOlE,OAC1CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,YAAW,SAI9B3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,UACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,cACHE,KAAK,SACLC,SAAWC,GAAMlE,EAAS,SAATA,CAAmBkE,EAAEC,OAAOlE,OAC7CoE,UAAQ,GAER1E,IAAAC,cAAA,UAAQ0F,UAAQ,EAACf,UAAQ,GAAC,uBAG1B5E,IAAAC,cAAA,UAAQK,MAAO,QAAQ,QACvBN,IAAAC,cAAA,UAAQK,MAAO,UAAU,UACzBN,IAAAC,cAAA,UAAQK,MAAO,UAAU,aAI/BN,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,UACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,eACHE,KAAK,eACLC,SAAWC,GAAMlE,EAAS,aAATA,EAAwBkE,EAAEC,OAAOlE,OAClDoE,UAAQ,GAER1E,IAAAC,cAAA,UAAQ0F,UAAQ,EAACf,UAAQ,GAAC,yBAGzBO,EAAUS,IAAKC,GACd7F,IAAAC,cAAA,UAAQjB,IAAK6G,EAAExB,KAAM/D,MAAOuF,EAAE1B,IAC3B0B,EAAEC,WAMZvH,GAA8B,IAArBA,EAAMwH,YACd/F,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,UACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,kBACHE,KAAK,kBACLC,SAAWC,GAAMlE,EAAS,eAATA,CAAyBkE,EAAEC,OAAOlE,OACnDoE,UAAQ,GAER1E,IAAAC,cAAA,UAAQ0F,UAAQ,EAACf,UAAQ,GAAC,2BAGzBS,EAAYO,IAAKC,GAChB7F,IAAAC,cAAA,UAAQjB,IAAK6G,EAAExB,KAAM/D,MAAOuF,EAAE1B,IAC3B0B,EAAEC,WAOf9F,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,cACHC,YAAY,SACZxF,KAAK,OACLyF,KAAK,SACLC,SAAWC,GAAMlE,EAAS,QAATA,CAAkBkE,EAAEC,OAAOlE,OAC5CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,eAAc,YAGjC3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,aACHC,YAAY,gBACZxF,KAAK,OACLyF,KAAK,QACLC,SAAWC,GAAMlE,EAAS,QAATA,CAAkBkE,EAAEC,OAAOlE,OAC5CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,cAAa,mBAGhC3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACErB,KAAK,WACLiF,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,gBACHC,YAAY,SACZC,KAAK,WACLC,SAAWC,GAAMlE,EAAS,WAATA,CAAqBkE,EAAEC,OAAOlE,OAC/CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,iBAAgB,cAGnC3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,UAAQ4D,UAAU,4BAA4BjF,KAAK,SAASgG,WAAUrG,EAAM8D,WAA0B,wBAEnGA,EACCrC,IAAAC,cAAA,QAAM4D,UAAU,mCAAmCZ,KAAK,SAAS+C,cAAY,SAE7EhG,IAAAC,cAAA,gBAKRD,IAAAC,cAAA,OAAK4D,UAAU,eACb7D,IAAAC,cAAC6E,IAAI,CAACjB,UAAU,qBAAqBkB,GAAI,KAAK,+BCvL7CkB,MAhCAA,KACb,MAAM9D,EAAWkB,cAOjB,OACErD,IAAAC,cAAA,OAAK4D,UAAU,uDACb7D,IAAAC,cAACJ,EAAc,CAACE,MAAM,4BAEtBC,IAAAC,cAAC6E,IAAI,CAACC,GAAI,IAAKlB,UAAU,qBAAoB,0BAI7C7D,IAAAC,cAAA,QAAM4D,UAAU,2EAEhB7D,IAAAC,cAAA,MAAI4D,UAAU,8BACZ7D,IAAAC,cAAA,MAAI4D,UAAU,YACZ7D,IAAAC,cAAC6E,IAAI,CACHoB,QAnBiB3B,IACzBA,EAAEP,iBACFO,EAAE4B,kBACFhE,EJFMA,GACCA,EAAS,CAAEvD,KRTA,aY2BViF,UAAU,mBACX,cC1BI,OACb,MAAMD,EAAWwC,cACjB,OACEpG,IAAAC,cAAA,OAAKkE,GAAG,WACNnE,IAAAC,cAAA,MAAI4D,UAAU,sBACZ7D,IAAAC,cAAA,MAAI4D,UAAW,aAAqC,iBAAtBD,EAASyC,SAA8B,SAAW,KAC9ErG,IAAAC,cAAC6E,IAAI,CAACC,GAAI,cAAelB,UAAU,YACjC7D,IAAAC,cAAA,KAAG4D,UAAU,4BACb7D,IAAAC,cAAA,YAAM,uBAGVD,IAAAC,cAAA,MAAI4D,UAAW,aAAqC,aAAtBD,EAASyC,SAA0B,SAAW,KAC1ErG,IAAAC,cAAC6E,IAAI,CAACC,GAAI,UAAWlB,UAAU,YAC7B7D,IAAAC,cAAA,KAAG4D,UAAU,eACb7D,IAAAC,cAAA,YAAM,oBAGVD,IAAAC,cAAA,MAAI4D,UAAW,aAAqC,kBAAtBD,EAASyC,SAA+B,SAAW,KAC/ErG,IAAAC,cAAC6E,IAAI,CAACC,GAAI,gBAAiBlB,UAAU,YACnC7D,IAAAC,cAAA,KAAG4D,UAAU,8BACb7D,IAAAC,cAAA,YAAM,4B,0HCNlB,MAsFMqG,GAASxG,IAAiB,IAAhB,OAAEyG,GAAQzG,EACxB,MAAM,KAAE5B,GAASsI,YAAaC,GAAMA,EAAEnI,cAC/BoI,EAAaC,GAAkBpD,oBAAS,IACxCqD,EAAMC,GAAWtD,mBAAS,OAC1BuD,EAAOC,GAAYxD,mBAAS,KAC5ByD,EAAcC,GAAmB1D,mBAAS,OAC1C2D,EAAaC,GAAkB5D,mBAAS,OACxC6D,EAASC,GAAc9D,oBAAS,GAEjC+D,EAAUC,cAEhB/B,oBAAU,KACJkB,GAAeE,GACjBY,KAGD,CAACZ,EAAMF,IAEV,MAAMc,EAAaA,KPnCI1I,SOoCZ,CACP8H,OACAa,SAAUlB,EAAOpC,IPrCdjD,EAAI,OAAQc,EAAcnB,SAAU/B,GACxC6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,KOiCLH,KAAMC,IACHA,EAAIqC,SACN8C,EAASnF,EAAIkF,UA2BnB,OACE9G,IAAAC,cAACyH,IAAI,CAAC5E,MAAO,CAAE6E,UAAW,SAAW9D,UAAU,qBAC7C7D,IAAAC,cAAA,OAAK4D,UAAU,kBACb7D,IAAAC,cAAA,OAAK4D,UAAU,sBACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACX0C,EAAOqB,MAGP5H,IAAAC,cAAA,OACE0C,MAAM,MACNkF,OAAO,MACP/E,MAAO,CAAEgF,aAAc,OACvBC,IAAG,mCAAAtG,OAAqC8E,EAAOqB,OAC/CI,IAAI,KAPNhI,IAAAC,cAACgI,IAAM,CAACC,MAAM,UAAUC,OAAK,EAACC,KAAM,IAAK/D,KAAMkC,EAAOlC,OAUxDrE,IAAAC,cAAA,MAAI4D,UAAU,QAAO,OAAK0C,EAAOlC,MACjCrE,IAAAC,cAAA,OAAK4D,UAAU,oBAAoB0C,EAAO8B,YAAc9B,EAAO8B,WAAWvC,SAG9E9F,IAAAC,cAAA,OAAK4D,UAAU,2BACb7D,IAAAC,cAAA,KAAG6C,MAAO,CAAEwF,SAAU,OAAQT,OAAQ,QAASU,SAAU,UAAY1E,UAAU,2BAC5E2E,IAAgBjC,EAAOkC,QAE1BzI,IAAAC,cAAA,OAAK4D,UAAU,eACb7D,IAAAC,cAACyI,IAAM,CAACxC,QAAU3B,GAAMoC,GAAe,IAAO,0BAIpD3G,IAAAC,cAAC0I,IAAK,CAACC,UAAQ,EAACC,KAAMnC,EAAaoC,OAASvE,GAAMoC,GAAe,IAC/D3G,IAAAC,cAAC0I,IAAM1C,OAAM,CAAC8C,aAAW,GAAC,+BAA6BxC,EAAOlC,MAC9DrE,IAAAC,cAAC0I,IAAMK,KAAI,KACThJ,IAAAC,cAACgJ,IAAKC,MAAK,CAACC,UAAU,OACpBnJ,IAAAC,cAACgJ,IAAKG,MAAK,KAAC,eACZpJ,IAAAC,cAACoJ,IAAU,CACTC,WAAW,aACX3D,SAAUiB,EACV2C,QAASC,MAASC,SAClBnF,SAAWoF,GAAY7C,EAAQ6C,MAGlC9C,GACC5G,IAAAC,cAAAD,IAAAmD,SAAA,KACEnD,IAAAC,cAACgJ,IAAKC,MAAK,CAACrF,UAAU,QACpB7D,IAAAC,cAACgJ,IAAKG,MAAK,KAAC,eACZpJ,IAAAC,cAAC0J,IAAM,CACLC,QAAS9C,EACNlB,IAAKiE,GAAChL,wBAAA,GACFgL,GAAC,IACJvJ,MAAOuJ,EAAE1F,GACTS,SAAUiF,EAAEC,OACZhE,MAAO0D,IAAOK,EAAEE,WAAWC,OAAO,cAEnCC,UACHC,SAAS,EACT5F,SAAU2C,EACV7C,YAAY,OACZ+F,aAAW,EACXC,iBAAmBC,GAAWA,EAAOzF,YAGzC5E,IAAAC,cAACgJ,IAAKC,MAAK,KACTlJ,IAAAC,cAAA,OAAK4D,UAAU,yBACb7D,IAAAC,cAACqK,IAAU,CAAChK,MAAO4G,EAAa5C,SAAWiG,GAAMpD,EAAeoD,SAM1EvK,IAAAC,cAAC0I,IAAM6B,OAAM,KACXxK,IAAAC,cAAC4E,EAAgB,CAACxC,UAAW+E,GAC3BpH,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAACyI,IAAM,CAACxC,QA5FGuE,KPtCO3L,MOwC5BuI,GAAW,IPxCiBvI,EOyCZ,CACd4L,UAAWxM,EAAKiG,GAChB+C,cACAyD,OAAQ3D,EAAa7C,IP3ClBjD,EAAI,OAAQc,EAAclB,SAAUhC,GACxC6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,KOuCLH,KAAMC,IACHA,EAAIqC,UACN4C,EAAQ,IAAI+D,MACZ3D,EAAgB,MAChBE,EAAe,MACfE,GAAW,GACXC,EAAQlI,KAAK,qBA+E0BwF,UAAWsC,IAAgBF,IAAiBJ,GAAM,iBAUlFiE,OA3NMA,KACnB,MAAOC,EAASC,GAAcxH,mBAAS,KAChCyH,EAASC,GAAc1H,mBAAS,KAChC8B,EAAaC,GAAkB/B,mBAAS,IAEzC2H,EAAiB9K,EAAc0K,EAASC,GAE9CvF,oBAAU,KACR2F,KAEC,CAACL,IAEJ,MAAMK,EAAeA,KPqCIrM,SOpCbD,wBAAC,GACNiM,GAAO,IACVM,OAAQN,EAAQM,QAAUN,EAAQM,OAAO9K,QPmCtCY,EAAI,OAAQc,EAAcrB,WAAY7B,GAC1C6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,KOvCLH,KAAMC,IACHA,EAAIqC,SACNgH,EAAWrJ,EAAIoJ,YAOrBxF,oBAAU,KACRE,KACC,IAEH,MAAMA,EAAmBA,KACvB3D,IAAiBJ,KAAMC,IACjBA,EAAIqC,SACNqB,EAAe1D,EAAIyD,gBAKzB,OACErF,IAAAC,cAAA,WACED,IAAAC,cAACgG,EAAM,MACPjG,IAAAC,cAAA,OAAKkE,GAAG,WACNnE,IAAAC,cAACoL,EAAO,MACRrL,IAAAC,cAAA,OAAKkE,GAAG,mBACNnE,IAAAC,cAAA,OAAK4D,UAAU,mBACb7D,IAAAC,cAAA,MAAI4D,UAAU,cACZ7D,IAAAC,cAAA,MAAI4D,UAAU,mBACZ7D,IAAAC,cAAC6E,IAAI,CAACC,GAAI,cAAc,mBAG5B/E,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAAA,OAAK4D,UAAU,OACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,OAAK4D,UAAU,SACb7D,IAAAC,cAACgJ,IAAKqC,QAAO,CAAChH,SAAWC,GAAM2G,EAAe,OAAfA,CAAuB3G,EAAEC,OAAOlE,OAAQ8D,YAAY,YAErFpE,IAAAC,cAAA,OAAK4D,UAAU,OACb7D,IAAAC,cAAC0J,IAAM,CACLC,QAASvE,EAAYO,IAAKiE,GAAChL,wBAAA,GAAWgL,GAAC,IAAEvJ,MAAOuJ,EAAE1F,MAClD+F,SAAS,EACT5F,SAAU4G,EAAe,cACzB9G,YAAY,aACZ+F,aAAW,KAGfnK,IAAAC,cAAA,OAAK4D,UAAU,OACb7D,IAAAC,cAAC0J,IAAM,CACLC,QAAS,CAAC,OAAQ,SAAU,UAAUhE,IAAKiE,IAAC,CAAQ1F,GAAI0F,EAAG/D,MAAO+D,EAAGvJ,MAAOuJ,EAAGxF,KAAMwF,KACrFK,SAAS,EACT5F,SAAU4G,EAAe,UACzB9G,YAAY,SACZ+F,aAAW,OAKnBnK,IAAAC,cAAA,OAAK4D,UAAU,8CACZmH,GAAWA,EAAQvM,OAAS,GAAKuM,EAAQpF,IAAK2F,GAAMvL,IAAAC,cAACqG,GAAM,CAACtH,IAAKuM,EAAEpH,GAAIoC,OAAQgF,YC1FjF,QACb,MAAM3H,EAAWwC,cACjB,OACEpG,IAAAC,cAAA,OAAKkE,GAAG,WACNnE,IAAAC,cAAA,MAAI4D,UAAU,sBACZ7D,IAAAC,cAAA,MAAI4D,UAAW,aAAqC,kBAAtBD,EAASyC,SAA+B,SAAW,KAC/ErG,IAAAC,cAAC6E,IAAI,CAACC,GAAI,gBAAiBlB,UAAU,YACnC7D,IAAAC,cAAA,KAAG4D,UAAU,8BACb7D,IAAAC,cAAA,YAAM,yBAGVD,IAAAC,cAAA,MAAI4D,UAAW,aAAqC,aAAtBD,EAASyC,SAA0B,SAAW,KAC1ErG,IAAAC,cAAC6E,IAAI,CAACC,GAAI,WAAYlB,UAAU,YAC9B7D,IAAAC,cAAA,KAAG4D,UAAU,eACb7D,IAAAC,cAAA,YAAM,2B,qBCfX,MAAMuL,GACTxL,IAAAC,cAAA,OACEwL,QAAQ,cACR5D,OAAO,OACPlF,MAAM,OACNG,MAAO,CAAE4I,SAAU,WAAYC,IAAK,IAEpC3L,IAAAC,cAAA,QACEsL,EAAE,yHACFK,KAAK,OACLC,SAAS,aAKFC,GACX9L,IAAAC,cAAA,OACE4H,OAAO,OACPlF,MAAM,OACN8I,QAAQ,cACR3I,MAAO,CAAE4I,SAAU,WAAYC,IAAK,IAEpC3L,IAAAC,cAAA,QACEsL,EAAE,yEACFK,KAAK,OACLC,SAAS,aC2NFE,OAvOCA,KACd,MAAM,KAAE7N,GAASsI,YAAaC,GAAMA,EAAEnI,cAC/BC,EAAO+E,GAAYC,mBAAQ1E,wBAAC,GAAKX,GAAI,IAAEuK,MAAOvK,EAAKuK,OAAS,OAC5DpD,EAAaC,GAAkB/B,mBAAS,IACzCyI,EAAehM,IAAMiM,SAErB9J,EAAWkB,cACXhD,EAAWD,EAAc7B,EAAO+E,GAEtCkC,oBAAU,KACRE,KACC,IAEH,MAAMA,EAAmBA,KACvB3D,IACGJ,KAAMC,IACDA,EAAIqC,SAAWrC,EAAIyD,aACrBC,EAAe1D,EAAIyD,eAGtBxD,MAAOC,IACNoK,QAAQC,IAAIrK,MAaZsK,EAAoB7H,IACxB,IAAIzF,EAAO,IAAIuN,SACfvN,EAAKwN,OAAO,QAAS/H,EAAEC,OAAO+H,MAAM,IV2EXC,EAAC1N,EAAMqF,IAC3BjD,EAAI,OAAO,GAADO,OAAKO,EAAcf,QAAMQ,OAAG0C,GAAMrF,GAChD6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,IU/ER0K,CAAc1N,EAAMZ,EAAKiG,IACtBxC,KAAM8K,GACDA,EAASxI,SACX9B,EAASC,EAAW,CAAElE,KAAMuO,EAASvO,aACrCwO,MAAM,qCAGN,GAGH7K,MAAOC,IACNoK,QAAQC,IAAIrK,MAIlB,OACE9B,IAAAC,cAAA,WACED,IAAAC,cAACgG,EAAM,MACPjG,IAAAC,cAAA,OAAKkE,GAAG,WACe,IAApBjG,EAAK6H,WAAmB/F,IAAAC,cAACoL,GAAO,MAAcrL,IAAAC,cAAC0M,EAAc,MAC9D3M,IAAAC,cAAA,OAAKkE,GAAG,mBACNnE,IAAAC,cAAA,OAAK4D,UAAU,mBACb7D,IAAAC,cAAA,MAAI4D,UAAU,cACZ7D,IAAAC,cAAA,MAAI4D,UAAU,mBACZ7D,IAAAC,cAAC6E,IAAI,CAACC,GAAI,YAAY,aAG1B/E,IAAAC,cAAA,SAAOrB,KAAM,OAAQ0F,SAAWC,GAAM6H,EAAiB7H,GAAIV,UAAU,SAAS+I,IAAKZ,IACnFhM,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAACyH,IAAI,CAAC7D,UAAU,qBACd7D,IAAAC,cAACyH,IAAKzB,OAAM,KACVjG,IAAAC,cAAA,OACE6C,MAAO,CAAE+J,OAAQ,WACjB3G,QAAU3B,GAAMyH,EAAac,QAAQC,QACrClJ,UAAU,eAER3F,EAAK0J,MAGL5H,IAAAC,cAAA,OACE0C,MAAM,MACNkF,OAAO,MACP/E,MAAO,CAAEgF,aAAc,OACvBC,IAAG,mCAAAtG,OAAqCvD,EAAK0J,OAC7CI,IAAI,KAPNhI,IAAAC,cAACgI,IAAM,CAACC,MAAM,UAAUC,OAAK,EAAC9D,KAAMnG,EAAKmG,KAAM+D,KAAM,OAWzDpI,IAAAC,cAAA,OAAK4D,UAAU,kBAAkB3F,EAAKmG,MAChB,IAArB9F,EAAMwH,YACL/F,IAAAC,cAAA,OAAK4D,UAAU,gFACb7D,IAAAC,cAAA,SAAO4D,UAAU,mBAAkB,yBACnC7D,IAAAC,cAAC+M,KAAM,CACLnF,OAAQ,GACRlF,MAAO,GACPkB,UAAW,OACXoJ,QAAQ,SACRnB,YAAaA,GACbN,cAAeA,GACflH,SAAW4I,IACT7M,EAAS,sBAATA,CAAgC6M,EAAU,EAAI,IAEhDA,QAAS3O,GAASA,EAAM4O,wBAKhCnN,IAAAC,cAACyH,IAAKsB,KAAI,KACRhJ,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,gBACXM,GAAG,YACHC,YAAY,OACZxF,KAAK,OACLyF,KAAK,OACL/D,MAAO/B,EAAM8F,KACbC,SAAWC,GAAMlE,EAAS,OAATA,CAAiBkE,EAAEC,OAAOlE,OAC3CmE,WAAS,EACTC,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,aAAY,UAI/B3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,UACE4D,UAAW,gBACXM,GAAG,cACHE,KAAK,SACL/D,MAAO/B,EAAM6M,OACb9G,SAAWC,GAAMlE,EAAS,SAATA,CAAmBkE,EAAEC,OAAOlE,OAC7CoE,UAAQ,GAER1E,IAAAC,cAAA,UAAQ0F,UAAQ,EAACf,UAAQ,GAAC,uBAG1B5E,IAAAC,cAAA,UAAQK,MAAO,QAAQ,QACvBN,IAAAC,cAAA,UAAQK,MAAO,UAAU,UACzBN,IAAAC,cAAA,UAAQK,MAAO,UAAU,aAI9B/B,GAA8B,IAArBA,EAAMwH,YACd/F,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,UACE4D,UAAW,gBACXM,GAAG,kBACHE,KAAK,kBACL/D,MAAO/B,EAAM6O,aACb9I,SAAWC,GAAMlE,EAAS,eAATA,EAA0BkE,EAAEC,OAAOlE,OACpDoE,UAAQ,GAER1E,IAAAC,cAAA,UAAQ0F,UAAQ,EAACf,UAAQ,GAAC,2BAGzBS,GACCA,EAAYO,IAAKC,GACf7F,IAAAC,cAAA,UAAQjB,IAAK6G,EAAExB,KAAM/D,MAAOuF,EAAE1B,IAC3B0B,EAAEC,WAOjB9F,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,cACHC,YAAY,SACZxF,KAAK,OACLyF,KAAK,SACL/D,MAAO/B,EAAM8O,MACb/I,SAAWC,GAAMlE,EAAS,QAATA,CAAkBkE,EAAEC,OAAOlE,OAC5CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,eAAc,YAGjC3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACE4D,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,aACHC,YAAY,gBACZxF,KAAK,OACL0B,MAAO/B,EAAMiF,MACba,KAAK,QACLC,SAAWC,GAAMlE,EAAS,QAATA,CAAkBkE,EAAEC,OAAOlE,OAC5CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,cAAa,mBAGhC3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAAA,SACErB,KAAK,WACLiF,UAAW,iBAAmBtF,EAAMoF,UAAY,aAAe,IAC/DQ,GAAG,gBACH7D,MAAO/B,EAAMkF,SACbW,YAAY,SACZC,KAAK,WACLC,SAAWC,GAAMlE,EAAS,WAATA,CAAqBkE,EAAEC,OAAOlE,OAC/CoE,UAAQ,IAEV1E,IAAAC,cAAA,SAAO0E,QAAQ,iBAAgB,cAGnC3E,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAAA,OAAK4D,UAAU,oBACb7D,IAAAC,cAACqK,IAAU,CAAClG,YAAY,QAAQ9D,MAAO/B,EAAMkK,MAAOnE,SAAWhE,GAAUD,EAAS,QAATA,CAAkBC,QAIjGN,IAAAC,cAACyH,IAAK8C,OAAM,KACVxK,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAACyI,IAAM,CAACxC,QAlMDoH,KVoCFxO,SUnCZP,EVoCJ2C,EAAI,OAAQc,EAAcpB,WAAY9B,GAC1C6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,KUzCQH,KAAMC,IAChBA,EAAIqC,UACN9B,EAASC,EAAW,CAAElE,KAAM0D,EAAI1D,QAChCwO,MAAM,oCA8LyC,iB,8BC1NvD,MA2CMa,GAAkBzN,IAAoB,IAAnB,IAAE0N,EAAG,KAAEtP,GAAM4B,EACpC,MAAO2N,EAAaC,GAAkBnK,mBAASiK,GACzCjH,EAASkH,EAAYlH,OACrBoH,EAAUF,EAAYE,QACtBC,EAAOH,EAAYG,MAClBlH,EAAaC,GAAkBpD,oBAAS,IACxC6D,EAASC,GAAc9D,oBAAS,GAEjCsK,EAAiBzN,EAAcqN,EAAaC,GAiBlD,OACE1N,IAAAC,cAACyH,IAAI,CAAC5E,MAAO,CAAE6E,UAAW,SAAW9D,UAAU,qBAC7C7D,IAAAC,cAAA,OAAK4D,UAAU,oCACb7D,IAAAC,cAAA,OAAK8H,IAAK+F,KAAQ9F,IAAI,GAAGH,OAAQ,OAAQ/E,MAAO,CAAEiL,QAAS,OAASlK,UAAU,0BAC9E7D,IAAAC,cAAA,OAAK6C,MAAO,CAAE+E,OAAQ,SAAWhE,UAAU,KACtB,IAApB3F,EAAK6H,YACJ/F,IAAAC,cAAA,OAAK6C,MAAO,CAAEkL,MAAO,GAAKnK,UAAU,yBAClC7D,IAAAC,cAAA,OAAK4D,UAAU,eACX0C,EAAOqB,MAGP5H,IAAAC,cAAA,OACE0C,MAAM,KACNkF,OAAO,KACP/E,MAAO,CAAEgF,aAAc,OACvBC,IAAG,mCAAAtG,OAAqC8E,EAAOqB,OAC/CI,IAAI,KAPNhI,IAAAC,cAACgI,IAAM,CAACC,MAAM,UAAUC,OAAK,EAACC,KAAM,GAAI/D,KAAMkC,EAAOlC,OAUvDrE,IAAAC,cAAA,KAAG4D,UAAU,QAAO,OAAK0C,EAAOlC,MAChCrE,IAAAC,cAAA,OAAK4D,UAAU,oBAAoB0C,EAAO8B,YAAc9B,EAAO8B,WAAWvC,SAI3D,IAApB5H,EAAK6H,YACJ/F,IAAAC,cAAA,OAAK6C,MAAO,CAAEkL,MAAO,GAAKnK,UAAU,yBAClC7D,IAAAC,cAAA,OAAK4D,UAAU,eACX8J,EAAQ/F,MAGR5H,IAAAC,cAAA,OACE0C,MAAM,KACNkF,OAAO,KACP/E,MAAO,CAAEgF,aAAc,OACvBC,IAAG,mCAAAtG,OAAqCkM,EAAQ/F,OAChDI,IAAI,KAPNhI,IAAAC,cAACgI,IAAM,CAACC,MAAM,UAAUC,OAAK,EAACC,KAAM,GAAI/D,KAAMsJ,EAAQtJ,OAUxDrE,IAAAC,cAAA,KAAG4D,UAAU,QAAQ8J,EAAQtJ,SAMrCrE,IAAAC,cAAA,OAAK4D,UAAU,kBACb7D,IAAAC,cAAA,OAAK4D,UAAU,kBACb7D,IAAAC,cAAA,OAAK4D,UAAU,oCAAmC,oBAEpD7D,IAAAC,cAAA,OAAK4D,UAAU,kBACb7D,IAAAC,cAAA,OAAK4D,UAAU,oCAAmC,SAC1C7D,IAAAC,cAAA,WAAM,IAAE0N,EAAQtJ,MAExBrE,IAAAC,cAAA,OAAK4D,UAAU,oCAAmC,QAC3C7D,IAAAC,cAAA,WAAM,IAAEuJ,MAASyE,KAAKN,EAAQO,IAAK,SAAS,GAAO,UAE1DlO,IAAAC,cAAA,OAAK4D,UAAU,oCAAmC,WACxC7D,IAAAC,cAAA,WAAM,IAAE0N,EAAQvC,SAG5BpL,IAAAC,cAAA,OAAK4D,UAAU,kBACb7D,IAAAC,cAAA,OAAK4D,UAAU,wBAAuB,qBAClB7D,IAAAC,cAAA,WAAM,IAAEuJ,IAAOoE,EAAK7D,WAAWC,OAAO,uBAE1DhK,IAAAC,cAAA,OAAK4D,UAAU,mCAAkC,cACpC7D,IAAAC,cAAA,WAAM,IAAEuJ,IAAOiE,EAAYU,WAAWnE,OAAO,wBAG5DhK,IAAAC,cAAA,KAAG6C,MAAO,CAAEwF,SAAU,OAAQ8F,WAAY,OAASvK,UAAU,gBAAe,wBAG5E7D,IAAAC,cAAA,OAAK6C,MAAO,CAAEwF,SAAU,OAAQT,OAAQ,QAASU,SAAU,UAAY1E,UAAU,gBAC9E2E,IAAgBiF,EAAYvG,cAE9BuG,EAAYY,cACXrO,IAAAC,cAAA,OAAK4D,UAAU,qBACQ,IAApB3F,EAAK6H,YACJ/F,IAAAC,cAAA,OAAK6C,MAAO,CAAEkL,MAAO,GAAKnK,UAAU,qBAClC7D,IAAAC,cAACyI,IAAM,CAAC7E,UAAU,SAASqC,QAAU3B,GAAMoC,GAAe,IAAO,SAKrE3G,IAAAC,cAAA,KAAG6C,MAAO,CAAEwF,SAAU,OAAQ8F,WAAY,OAASvK,UAAU,2BAA0B,wBAGvF7D,IAAAC,cAAA,OAAK6C,MAAO,CAAEwF,SAAU,OAAQT,OAAQ,QAASU,SAAU,UAAY1E,UAAU,gBAC9E2E,IAAgBiF,EAAYY,gBAId,IAApBnQ,EAAK6H,aAAqB0H,EAAYY,cACrCrO,IAAAC,cAAA,OAAK4D,UAAU,0BACb7D,IAAAC,cAACyI,IAAM,CAAC7E,UAAU,QAAQqC,QAAU3B,GAAMoC,GAAe,IAAO,sBAMtE3G,IAAAC,cAAC0I,IAAK,CAACC,UAAQ,EAACC,KAAMnC,EAAaoC,OAASvE,GAAMoC,GAAe,IAC/D3G,IAAAC,cAAC0I,IAAM1C,OAAM,CAAC8C,aAAW,GAAC,wBAAsB4E,EAAQtJ,MACxDrE,IAAAC,cAAC0I,IAAMK,KAAI,KACThJ,IAAAC,cAACqK,IAAU,CAAChK,MAAOmN,EAAYY,aAAc/J,SAAUuJ,EAAe,mBAExE7N,IAAAC,cAAC0I,IAAM6B,OAAM,KACXxK,IAAAC,cAAC4E,EAAgB,CAACxC,UAAW+E,GAC3BpH,IAAAC,cAAA,OAAK4D,UAAU,cACb7D,IAAAC,cAACyI,IAAM,CAACxC,QAzHWoI,KX+CAxP,MW9C7BuI,GAAW,IX8CkBvI,EW7CZ,CACfuP,aAAcZ,EAAYY,aAC1BE,cAAef,EAAIrJ,IX4ChBjD,EAAI,OAAQc,EAAchB,iBAAkBlC,GAChD6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,KWhDLH,KAAMC,IACHA,EAAIqC,UACNoD,GAAW,GACXV,GAAe,OAiHgC/B,UAAW6I,EAAYY,cAAc,iBAU7EG,OAxLMA,KACnB,MAAOC,EAAcC,GAAmBnL,mBAAS,KAC3C,KAAErF,GAASsI,YAAaC,GAAMA,EAAEnI,aAEtCkH,oBAAU,KACRmJ,KAEC,IAEH,MAAMA,EAAoBA,KXiFI7P,SWhFZ,CAAEqF,GAAIjG,EAAKiG,IXiFtBjD,EAAI,OAAQc,EAAcjB,aAAcjC,GAC5C6C,KAAMC,GACEA,EAAI9C,MAEZ+C,MAAOC,IACN,MAAMA,KWtFyBH,KAAMC,IACjCA,EAAIqC,SACNyK,EAAgB9M,EAAI6M,iBAK1B,OACEzO,IAAAC,cAAA,WACED,IAAAC,cAACgG,EAAM,MACPjG,IAAAC,cAAA,OAAKkE,GAAG,WACe,IAApBjG,EAAK6H,WAAmB/F,IAAAC,cAAC2O,GAAU,MAAiB5O,IAAAC,cAACoL,EAAO,MAC7DrL,IAAAC,cAAA,OAAKkE,GAAG,mBACNnE,IAAAC,cAAA,OAAK4D,UAAU,mBACb7D,IAAAC,cAAA,MAAI4D,UAAU,cACZ7D,IAAAC,cAAA,MAAI4D,UAAU,mBACZ7D,IAAAC,cAAC6E,IAAI,CAACC,GAAI,iBAAiB,kBAG/B/E,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAAA,OAAK4D,UAAU,8CACZ4K,GACCA,EAAahQ,OAAS,GACtBgQ,EAAa7I,IAAK2F,GAAMvL,IAAAC,cAACsN,GAAe,CAACvO,IAAKuM,EAAEpH,GAAIqJ,IAAKjC,EAAGrN,KAAMA,YCrCrE,QACb,MAAM,MAAEC,EAAK,KAAED,GAASsI,YAAajI,GAAUA,EAAMD,aAErD,IAAIuQ,EAEJ,MAAMC,EACJ9O,IAAAC,cAAC+M,IAAM,KACLhN,IAAAC,cAAC8O,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAW9L,IACjCpD,IAAAC,cAAC8O,IAAK,CAACE,KAAK,YAAYC,UAAWhK,IACnClF,IAAAC,cAAC8O,IAAK,KACJ/O,IAAAC,cAACgF,IAAQ,CAACF,GAAG,QAIbwB,EACJvG,IAAAC,cAAC+M,IAAM,KACLhN,IAAAC,cAAC8O,IAAK,CAACE,KAAK,WAAWC,UAAWnD,KAClC/L,IAAAC,cAAC8O,IAAK,CAACE,KAAK,gBAAgBC,UAAWV,KACvCxO,IAAAC,cAAC8O,IAAK,KACJ/O,IAAAC,cAACgF,IAAQ,CAACF,GAAG,eAKb4I,EACJ3N,IAAAC,cAAC+M,IAAM,KACLhN,IAAAC,cAAC8O,IAAK,CAACE,KAAK,eAAeC,UAAWrE,KACtC7K,IAAAC,cAAC8O,IAAK,CAACE,KAAK,WAAWC,UAAWnD,KAClC/L,IAAAC,cAAC8O,IAAK,CAACE,KAAK,gBAAgBC,UAAWV,KACvCxO,IAAAC,cAAC8O,IAAK,KACJ/O,IAAAC,cAACgF,IAAQ,CAACF,GAAG,mBAYnB,OANE8J,EADE1Q,GAA6B,IAApBD,EAAK6H,WACTQ,EACEpI,GAA6B,IAApBD,EAAK6H,WAChB4H,EAEAmB,EAGP9O,IAAAC,cAAA,OAAK4D,UAAU,OACb7D,IAAAC,cAACkP,IAAM,KAAEN,KC7CfO,IAASC,OACPrP,IAAAC,cAACqP,IAAQ,CAAC/P,MAAOA,GACfS,IAAAC,cAACsP,GAAG,OAENC,SAASC,eAAe,W","file":"static/js/main.98c7f2ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rxicon.cc40e615.png\";","export const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const EDIT_USER = 'EDIT_USER';","import {\n  LOGIN,\n  LOGOUT,\n  EDIT_USER,\n} from \"../actions/constants\";\n\nconst initialState = {\n  user: null,\n  token: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        user: action.data.user,\n        token: action.data.token\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null\n      };\n\n    case EDIT_USER:\n      return { ...state, user: action.data.user };\n\n    default:\n      return state;\n  }\n};\n","\nimport { combineReducers } from 'redux';\nimport userReducers from './userReducers';\n\nconst rootReducer = combineReducers({\n    userDetails: userReducers,\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from \"redux-logger\"\nconst persistConfig = {\n    key: 'biggggggggsecret',\n    storage,\n}\n\nconst middlewares = [rootReducer, logger];\nmiddlewares.push(logger);\nconst persist = persistReducer(persistConfig, ...middlewares);\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\n\nexport const store = createStoreWithMiddleware(persist);\nexport const persistor = persistStore(store);","import Helmet from \"react-helmet\";\nimport React from \"react\";\n\nconst TitleComponent = ({title}) => {\n    var defaultTitle = '⚛️ app';\n    return (\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>{title ? title : defaultTitle}</title>\n        </Helmet>\n    );\n};\n\nexport default TitleComponent;\n","export function setItemHelper(state, setState) {\n    const setItem = (key) => {\n        return  value => {\n            setState({\n                ...state,\n                [key]: value\n            });\n        };\n    };\n\n    return setItem\n};\n","export default {\n  API: {\n    LOGIN: 'api/login',\n    REGISTER: 'api/register',\n    GETUSERTYPES: 'api/userTypes',\n    GETDEPARTMENTS: 'api/departments',\n    GETDOCTORS: 'api/doctors',\n    UPDATEUSER: 'api/update',\n    GETSLOTS: 'api/get-slots',\n    BOOKSLOT: 'api/book-slot',\n    APPOINTMENTS: 'api/appointments',\n    SAVEPRESCRIPTION: 'api/prescription',\n    UPLOAD: 'api/upload/',\n  },\n};\n","import axios from \"axios\";\nimport constants from \"../constants\";\n\nlet getConfig = 'http://3.149.240.186:8000/';\n\nconst api = (method, url, data = null, token = null) => {\n  if (token) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n      credentials: true\n    };\n  }\n  return axios({\n    method: method,\n    url: `${getConfig}${url}`,\n    data: data\n  })\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const login = data => {\n  return api(\"post\", constants.API.LOGIN, data)\n    .then(res => {\n      return res.data;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const register = (data) => {\n  return api('post', constants.API.REGISTER, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const getUserTypes = () => {\n  return api('GET', constants.API.GETUSERTYPES)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const getDepartments = () => {\n  return api('GET', constants.API.GETDEPARTMENTS)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const getDoctors = (data) => {\n  return api('POST', constants.API.GETDOCTORS, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const editUser = (data) => {\n  return api('POST', constants.API.UPDATEUSER, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const getSlots = (data) => {\n  return api('POST', constants.API.GETSLOTS, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const bookAppointment = (data) => {\n  return api('POST', constants.API.BOOKSLOT, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const getAppointments = (data) => {\n  return api('POST', constants.API.APPOINTMENTS, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const savePrescription = (data) => {\n  return api('POST', constants.API.SAVEPRESCRIPTION, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const uploadUserPic = (data, id) => {\n  return api('POST', `${constants.API.UPLOAD}${id}`, data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};","import { LOGIN, LOGOUT, EDIT_USER } from './constants';\n\nexport const addUser = (accessData) => {\n  return (dispatch) => {\n    dispatch({ type: LOGIN, data: accessData });\n  };\n};\n\nexport const removeUser = () => {\n  return (dispatch) => {\n    return dispatch({ type: LOGOUT });\n  };\n};\n\nexport const updateUser = (accessData) => {\n  return (dispatch) => {\n    return dispatch({ type: EDIT_USER, data: accessData });\n  };\n};\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nexport default ({ isLoading, small, children }) => {\n  const normalStyles = {\n    padding: '20px',\n    margin: '0 auto',\n    width: '60px',\n  };\n\n  const smallStyles = {\n    ...normalStyles,\n    width: '30px',\n  };\n\n  const styles = small ? smallStyles : normalStyles;\n\n  return isLoading ? (\n    <div style={styles}>\n      <Spinner animation='border' role='status' variant='primary' />\n    </div>\n  ) : (\n    <> {children} </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport TitleComponent from './title';\nimport { setItemHelper } from '../utils';\nimport { login } from '../apis';\nimport { addUser } from '../redux/actions/user';\nimport { useDispatch } from 'react-redux';\nimport LoadingIndicator from '../components/LoadingIndicator';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [state, setstate] = useState({\n    email: '',\n    password: '',\n    redirect: false,\n    authError: false,\n    isLoading: false,\n    location: {},\n  });\n\n  const setState = setItemHelper(state, setstate);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setState('authError')('');\n    login(state).then((res) => {\n      if (res.success) {\n        dispatch(addUser(res));\n      } else {\n        setState('authError')(res.message);\n      }\n    });\n  };\n\n  const renderRedirect = () => {\n    if (state.redirect) {\n      return <Redirect to='/dashboard' />;\n    }\n  };\n\n  const isLoading = state.isLoading;\n  return (\n    <div className='container'>\n      <TitleComponent title='Doctor Appointment App '></TitleComponent>\n      <div className='card card-login mx-auto mt-5'>\n        <div className='card-header'>Login</div>\n        <div className='card-body'>\n          {state.authError && <div className={'alert alert-danger'}>{state.authError}</div>}\n          {/* <div className={'alert ' + (state.authError ? 'alert-danger' : 'alert-success')}>\n            {state.authError || state.success}\n          </div> */}\n          <form onSubmit={handleSubmit}>\n            <div className='form-group'>\n              <div className='form-label-group'>\n                <input\n                  className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                  id='inputEmail'\n                  placeholder='Email address'\n                  type='text'\n                  name='email'\n                  onChange={(e) => setState('email')(e.target.value)}\n                  autoFocus\n                  required\n                />\n                <label htmlFor='inputEmail'>Email address</label>\n                <div className='invalid-feedback'>Please provide a valid Email.</div>\n              </div>\n            </div>\n            <div className='form-group'>\n              <div className='form-label-group'>\n                <input\n                  type='password'\n                  className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                  id='inputPassword'\n                  placeholder='******'\n                  name='password'\n                  onChange={(e) => setState('password')(e.target.value)}\n                  required\n                />\n                <label htmlFor='inputPassword'>Password</label>\n                <div className='invalid-feedback'>Please provide a valid Password.</div>\n              </div>\n            </div>\n            <div className='form-group'>\n              <button className='btn btn-primary btn-block' type='submit' disabled={state.isLoading ? true : false}>\n                Login &nbsp;&nbsp;&nbsp;\n                <LoadingIndicator isLoading={isLoading} />\n              </button>\n            </div>\n          </form>\n          <div className='text-center'>\n            <Link className='d-block small mt-3' to={'register'}>\n              Register an Account\n            </Link>\n          </div>\n        </div>\n      </div>\n      {renderRedirect()}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TitleComponent from './title';\nimport { setItemHelper } from '../utils';\nimport { getDepartments, getUserTypes, register } from '../apis';\nimport { addUser } from '../redux/actions/user';\nimport { useDispatch } from 'react-redux';\nimport LoadingIndicator from '../components/LoadingIndicator';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [state, setstate] = useState({\n    email: '',\n    password: '',\n    redirect: false,\n    authError: false,\n    location: {},\n  });\n\n  const [userTypes, setuserTypes] = useState([]);\n  const [departments, setdepartments] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  const setState = setItemHelper(state, setstate);\n\n  //   const setField = setItemHelper(fields, setfields);\n\n  useEffect(() => {\n    fetchUserTypes();\n    fetchDepartments();\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setState('authError')('');\n    register(state).then((res) => {\n      if (res.success) {\n        dispatch(addUser(res));\n      } else {\n        setState('authError')(res.message);\n      }\n    });\n  };\n\n  const fetchUserTypes = () => {\n    setisLoading(true);\n    getUserTypes().then((res) => {\n      if (res.success) {\n        setisLoading(false);\n        setuserTypes(res.userTypes);\n      }\n    });\n  };\n\n  const fetchDepartments = () => {\n    setisLoading(true);\n    getDepartments().then((res) => {\n      if (res.success) {\n        setisLoading(false);\n        setdepartments(res.departments);\n      }\n    });\n  };\n\n\n  return (\n    <LoadingIndicator isLoading={isLoading}>\n      <div className='container'>\n        <TitleComponent title='Register'></TitleComponent>\n        <div className='card card-login mx-auto mt-5'>\n          <div className='card-header'>Register</div>\n          <div className='card-body'>\n            {(state.authError || state.success) && (\n              <div className={'alert ' + (state.authError ? 'alert-danger' : 'alert-success')}>\n                {state.authError || state.success}\n              </div>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                    id='inputName'\n                    placeholder='Name'\n                    type='text'\n                    name='name'\n                    onChange={(e) => setState('name')(e.target.value)}\n                    autoFocus\n                    required\n                  />\n                  <label htmlFor='inputName'>Name</label>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                    id='inputDOB'\n                    placeholder='DOB'\n                    type='date'\n                    name='DOB'\n                    onChange={(e) => setState('dob')(e.target.value)}\n                    required\n                  />\n                  <label htmlFor='inputDOB'>DOB</label>\n                </div>\n              </div>\n\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <select\n                    className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                    id='inputGender'\n                    name='gender'\n                    onChange={(e) => setState('gender')(e.target.value)}\n                    required\n                  >\n                    <option selected disabled>\n                      ---select gender---\n                    </option>\n                    <option value={'male'}>Male</option>\n                    <option value={'female'}>Female</option>\n                    <option value={'others'}>Others</option>\n                  </select>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <select\n                    className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                    id='inpuusertype'\n                    name='inpuusertype'\n                    onChange={(e) => setState('userTypeId')(+e.target.value)}\n                    required\n                  >\n                    <option selected disabled>\n                      ---select usertype---\n                    </option>\n                    {userTypes.map((u) => (\n                      <option key={u.name} value={u.id}>\n                        {u.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              {state && state.userTypeId === 2 && (\n                <div className='form-group'>\n                  <div className='form-label-group'>\n                    <select\n                      className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                      id='inputDetartment'\n                      name='inputDetartment'\n                      onChange={(e) => setState('departmentId')(e.target.value)}\n                      required\n                    >\n                      <option selected disabled>\n                        ---Select Department---\n                      </option>\n                      {departments.map((u) => (\n                        <option key={u.name} value={u.id}>\n                          {u.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              )}\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                    id='inputMobile'\n                    placeholder='Mobile'\n                    type='text'\n                    name='Mobile'\n                    onChange={(e) => setState('phone')(e.target.value)}\n                    required\n                  />\n                  <label htmlFor='inputMobile'>Mobile</label>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                    id='inputEmail'\n                    placeholder='Email address'\n                    type='text'\n                    name='email'\n                    onChange={(e) => setState('email')(e.target.value)}\n                    required\n                  />\n                  <label htmlFor='inputEmail'>Email address</label>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='form-label-group'>\n                  <input\n                    type='password'\n                    className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                    id='inputPassword'\n                    placeholder='******'\n                    name='password'\n                    onChange={(e) => setState('password')(e.target.value)}\n                    required\n                  />\n                  <label htmlFor='inputPassword'>Password</label>\n                </div>\n              </div>\n              <div className='form-group'>\n                <button className='btn btn-primary btn-block' type='submit' disabled={state.isLoading ? true : false}>\n                  Register &nbsp;&nbsp;&nbsp;\n                  {isLoading ? (\n                    <span className='spinner-border spinner-border-sm' role='status' aria-hidden='true'></span>\n                  ) : (\n                    <span></span>\n                  )}\n                </button>\n              </div>\n            </form>\n            <div className='text-center'>\n              <Link className='d-block small mt-3' to={'/'}>\n                Login To Your Account\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </LoadingIndicator>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport TitleComponent from '../pages/title';\nimport { removeUser } from '../redux/actions/user';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const handleClickLogout = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(removeUser());\n  };\n\n  return (\n    <nav className='navbar navbar-expand navbar-dark bg-dark static-top'>\n      <TitleComponent title='Doctor Appointment App '></TitleComponent>\n\n      <Link to={'/'} className='navbar-brand mr-1'>\n        Doctor Appointment App\n      </Link>\n\n      <form className='d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0'></form>\n\n      <ul className='navbar-nav ml-auto ml-md-0'>\n        <li className='nav-item'>\n          <Link\n            onClick={handleClickLogout}\n            className='btn btn-primary'\n          >\n            Logout\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default () => {\n  const location = useLocation();\n  return (\n    <div id='wrapper'>\n      <ul className='sidebar navbar-nav'>\n        <li className={'nav-item ' + (location.pathname === '/find-doctor' ? 'active' : '')}>\n          <Link to={'find-doctor'} className='nav-link'>\n            <i className='fas fa-fw fa-crosshairs'></i>\n            <span>&nbsp;Find A Doctor</span>\n          </Link>\n        </li>\n        <li className={'nav-item ' + (location.pathname === '/profile' ? 'active' : '')}>\n          <Link to={'profile'} className='nav-link'>\n            <i className='fa fa-user'></i>\n            <span>&nbsp;My Profile</span>\n          </Link>\n        </li>\n        <li className={'nav-item ' + (location.pathname === '/appointments' ? 'active' : '')}>\n          <Link to={'/appointments'} className='nav-link'>\n            <i className='far fa-fw fa-calendar-alt'></i>\n            <span>&nbsp;My Appointments</span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport Header from '../elements/header';\nimport Sidebar from '../elements/PatientSidebar';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Form, Modal } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { setItemHelper } from '../utils';\nimport { bookAppointment, getDepartments, getDoctors, getSlots } from '../apis';\nimport Avatar from 'react-avatar';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport { useHistory } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport ReactHtmlParser from 'react-html-parser';\nimport LoadingIndicator from '../components/LoadingIndicator';\n\nconst DoctorSearch = () => {\n  const [filters, setfilters] = useState({});\n  const [doctors, setdoctors] = useState({});\n  const [departments, setdepartments] = useState([]);\n\n  const setFilterField = setItemHelper(filters, setfilters);\n\n  useEffect(() => {\n    fetchDoctors();\n    // eslint-disable-next-line\n  }, [filters]);\n\n  const fetchDoctors = () => {\n    getDoctors({\n      ...filters,\n      gender: filters.gender && filters.gender.value,\n    }).then((res) => {\n      if (res.success) {\n        setdoctors(res.doctors);\n      } else {\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n\n  const fetchDepartments = () => {\n    getDepartments().then((res) => {\n      if (res.success) {\n        setdepartments(res.departments);\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Header />\n      <div id='wrapper'>\n        <Sidebar></Sidebar>\n        <div id='content-wrapper'>\n          <div className='container-fluid'>\n            <ol className='breadcrumb'>\n              <li className='breadcrumb-item'>\n                <Link to={'/dashboard'}>Find A Doctor</Link>\n              </li>\n            </ol>\n            <div className='container'>\n              <div className='row'>\n                <div className='container d-flex'>\n                  <div className='col-6'>\n                    <Form.Control onChange={(e) => setFilterField('name')(e.target.value)} placeholder='Search' />\n                  </div>\n                  <div className='col'>\n                    <Select\n                      options={departments.map((a) => ({ ...a, value: a.id }))}\n                      isMulti={false}\n                      onChange={setFilterField('department')}\n                      placeholder='Department'\n                      isClearable\n                    />\n                  </div>\n                  <div className='col'>\n                    <Select\n                      options={['Male', 'Female', 'Others'].map((a) => ({ id: a, label: a, value: a, name: a }))}\n                      isMulti={false}\n                      onChange={setFilterField('gender')}\n                      placeholder='Gender'\n                      isClearable\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='row no-gutters justify-content-around mt-5'>\n                {doctors && doctors.length > 0 && doctors.map((d) => <Doctor key={d.id} doctor={d} />)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Doctor = ({ doctor }) => {\n  const { user } = useSelector((s) => s.userDetails);\n  const [isModalOpen, setisModalOpen] = useState(false);\n  const [date, setdate] = useState(null);\n  const [slots, setslots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [description, setdescription] = useState(null);\n  const [loading, setloading] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isModalOpen && date) {\n      fetchSlots();\n    }\n    // eslint-disable-next-line\n  }, [date, isModalOpen]);\n\n  const fetchSlots = () => {\n    getSlots({\n      date,\n      doctorId: doctor.id,\n    }).then((res) => {\n      if (res.success) {\n        setslots(res.slots);\n      } else {\n        return;\n      }\n    });\n  };\n\n  const handleBookSlot = () => {\n    // slotId, patientId, description\n    setloading(true);\n    bookAppointment({\n      patientId: user.id,\n      description,\n      slotId: selectedSlot.id,\n    }).then((res) => {\n      if (res.success) {\n        setdate(new Date());\n        setSelectedSlot(null);\n        setdescription(null);\n        setloading(false);\n        history.push('/appointments');\n      } else {\n        return;\n      }\n    });\n  };\n\n  return (\n    <Card style={{ minHeight: '180px' }} className='col-5 mb-2 shadow'>\n      <div className='row no-gutters'>\n        <div className='col-4 border-right'>\n          <div className='text-center my-4'>\n            {!doctor.photo ? (\n              <Avatar color='#212529' round size={100} name={doctor.name} />\n            ) : (\n              <img\n                width='100'\n                height='100'\n                style={{ borderRadius: '50%' }}\n                src={`http://3.149.240.186:8000/api/image/${doctor.photo}`}\n                alt=''\n              />\n            )}\n            <h6 className='mb-0'>Dr. {doctor.name}</h6>\n            <div className='small text-muted'>{doctor.department && doctor.department.label}</div>\n          </div>\n        </div>\n        <div className='col p-2 align-middle td'>\n          <p style={{ fontSize: '14px', height: '125px', overflow: 'scroll' }} className='text-muted text-justify'>\n            {ReactHtmlParser(doctor.about)}\n          </p>\n          <div className='text-center'>\n            <Button onClick={(e) => setisModalOpen(true)}>Book an appointment</Button>\n          </div>\n        </div>\n      </div>\n      <Modal centered show={isModalOpen} onHide={(e) => setisModalOpen(false)}>\n        <Modal.Header closeButton>Book An Appointment with Dr.{doctor.name}</Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId='dob'>\n            <Form.Label>Select Date</Form.Label>\n            <DatePicker\n              dateFormat='dd/MM/yyyy'\n              selected={date}\n              minDate={moment().toDate()}\n              onChange={(newDate) => setdate(newDate)}\n            />\n          </Form.Group>\n          {date && (\n            <>\n              <Form.Group className='mt-3'>\n                <Form.Label>Select Slot</Form.Label>\n                <Select\n                  options={slots\n                    .map((a) => ({\n                      ...a,\n                      value: a.id,\n                      disabled: a.booked,\n                      label: moment(a.startTime).format('hh:mm A'),\n                    }))\n                    .reverse()}\n                  isMulti={false}\n                  onChange={setSelectedSlot}\n                  placeholder='Slot'\n                  isClearable\n                  isOptionDisabled={(option) => option.disabled}\n                />\n              </Form.Group>\n              <Form.Group>\n                <div className='form-label-group mt-3'>\n                  <ReactQuill value={description} onChange={(v) => setdescription(v)} />\n                </div>\n              </Form.Group>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <LoadingIndicator isLoading={loading}>\n            <div className='text-right'>\n              <Button onClick={handleBookSlot} disabled={!description || !selectedSlot || !date}>\n                Proceed\n              </Button>\n            </div>\n          </LoadingIndicator>\n        </Modal.Footer>\n      </Modal>\n    </Card>\n  );\n};\nexport default DoctorSearch;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default () => {\n  const location = useLocation();\n  return (\n    <div id='wrapper'>\n      <ul className='sidebar navbar-nav'>\n        <li className={'nav-item ' + (location.pathname === '/appointments' ? 'active' : '')}>\n          <Link to={'/appointments'} className='nav-link'>\n            <i className='far fa-fw fa-calendar-alt'></i>\n            <span>&nbsp;My Appointments</span>\n          </Link>\n        </li>\n        <li className={'nav-item ' + (location.pathname === '/profile' ? 'active' : '')}>\n          <Link to={'/profile'} className='nav-link'>\n            <i className='fa fa-user'></i>\n            <span>&nbsp;Manage Profile</span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","\nimport React from \"react\";\nexport const uncheckedIcon = (\n    <svg\n      viewBox=\"-2 -5 14 20\"\n      height=\"100%\"\n      width=\"100%\"\n      style={{ position: \"absolute\", top: 0 }}\n    >\n      <path\n        d=\"M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12\"\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n  \n  export const checkedIcon = (\n    <svg\n      height=\"100%\"\n      width=\"100%\"\n      viewBox=\"-2 -5 17 21\"\n      style={{ position: \"absolute\", top: 0 }}\n    >\n      <path\n        d=\"M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0\"\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n  ","import React, { useState, useEffect } from 'react';\nimport Header from '../elements/header';\nimport Sidebar from '../elements/DoctorSideBar';\nimport PatientSidebar from '../elements/PatientSidebar';\nimport { Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setItemHelper } from '../utils';\nimport { getDepartments, editUser, uploadUserPic } from '../apis';\nimport Avatar from 'react-avatar';\nimport Switch from 'react-switch';\nimport { checkedIcon, uncheckedIcon } from '../utils/icons';\nimport { updateUser } from '../redux/actions/user';\nimport { Link } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\n\nconst Profile = () => {\n  const { user } = useSelector((s) => s.userDetails);\n  const [state, setstate] = useState({ ...user, about: user.about || '' });\n  const [departments, setdepartments] = useState([]);\n  const fileUploader = React.useRef();\n\n  const dispatch = useDispatch();\n  const setState = setItemHelper(state, setstate);\n\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n\n  const fetchDepartments = () => {\n    getDepartments()\n      .then((res) => {\n        if (res.success && res.departments) {\n          setdepartments(res.departments);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleUpdateSave = () => {\n    editUser(state).then((res) => {\n      if (res.success) {\n        dispatch(updateUser({ user: res.user }));\n        alert('changes Saved successfully!');\n      }\n    });\n  };\n\n  const handleFileUpload = (e) => {\n    let data = new FormData();\n    data.append('image', e.target.files[0]);\n\n    uploadUserPic(data, user.id)\n      .then((response) => {\n        if (response.success) {\n          dispatch(updateUser({ user: response.user }));\n          alert('changes Saved successfully!');\n          return;\n        } else {\n          return;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <Header />\n      <div id='wrapper'>\n        {user.userTypeId === 2 ? <Sidebar></Sidebar> : <PatientSidebar />}\n        <div id='content-wrapper'>\n          <div className='container-fluid'>\n            <ol className='breadcrumb'>\n              <li className='breadcrumb-item'>\n                <Link to={'/profile'}>Profile</Link>\n              </li>\n            </ol>\n            <input type={'file'} onChange={(e) => handleFileUpload(e)} className='d-none' ref={fileUploader}></input>\n            <div className='container'>\n              <Card className='col-6 mx-auto p-0'>\n                <Card.Header>\n                  <div\n                    style={{ cursor: 'pointer' }}\n                    onClick={(e) => fileUploader.current.click()}\n                    className='text-center'\n                  >\n                    {!user.photo ? (\n                      <Avatar color='#212529' round name={user.name} size={100} />\n                    ) : (\n                      <img\n                        width='100'\n                        height='100'\n                        style={{ borderRadius: '50%' }}\n                        src={`http://3.149.240.186:8000/api/image/${user.photo}`}\n                        alt=''\n                      />\n                    )}\n                  </div>\n                  <div className='text-center h4'>{user.name}</div>\n                  {state.userTypeId === 2 && (\n                    <div className='form-group form-switch d-flex justify-content-center align-items-center mb-0'>\n                      <label className='pt-1 text-muted'>Open for appointments</label>\n                      <Switch\n                        height={20}\n                        width={40}\n                        className={'pl-2'}\n                        onColor='#0AB66'\n                        checkedIcon={checkedIcon}\n                        uncheckedIcon={uncheckedIcon}\n                        onChange={(checked) => {\n                          setState('openForAppointments')(checked ? 1 : 0);\n                        }}\n                        checked={state && state.openForAppointments}\n                      />\n                    </div>\n                  )}\n                </Card.Header>\n                <Card.Body>\n                  <div className='form-group'>\n                    <div className='form-label-group'>\n                      <input\n                        className={'form-control '}\n                        id='inputName'\n                        placeholder='Name'\n                        type='text'\n                        name='name'\n                        value={state.name}\n                        onChange={(e) => setState('name')(e.target.value)}\n                        autoFocus\n                        required\n                      />\n                      <label htmlFor='inputName'>Name</label>\n                    </div>\n                  </div>\n\n                  <div className='form-group'>\n                    <div className='form-label-group'>\n                      <select\n                        className={'form-control '}\n                        id='inputGender'\n                        name='gender'\n                        value={state.gender}\n                        onChange={(e) => setState('gender')(e.target.value)}\n                        required\n                      >\n                        <option selected disabled>\n                          ---select gender---\n                        </option>\n                        <option value={'male'}>Male</option>\n                        <option value={'female'}>Female</option>\n                        <option value={'others'}>Others</option>\n                      </select>\n                    </div>\n                  </div>\n                  {state && state.userTypeId === 2 && (\n                    <div className='form-group'>\n                      <div className='form-label-group'>\n                        <select\n                          className={'form-control '}\n                          id='inputDetartment'\n                          name='inputDetartment'\n                          value={state.departmentId}\n                          onChange={(e) => setState('departmentId')(+e.target.value)}\n                          required\n                        >\n                          <option selected disabled>\n                            ---Select Department---\n                          </option>\n                          {departments &&\n                            departments.map((u) => (\n                              <option key={u.name} value={u.id}>\n                                {u.label}\n                              </option>\n                            ))}\n                        </select>\n                      </div>\n                    </div>\n                  )}\n                  <div className='form-group'>\n                    <div className='form-label-group'>\n                      <input\n                        className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                        id='inputMobile'\n                        placeholder='Mobile'\n                        type='text'\n                        name='Mobile'\n                        value={state.phone}\n                        onChange={(e) => setState('phone')(e.target.value)}\n                        required\n                      />\n                      <label htmlFor='inputMobile'>Mobile</label>\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <div className='form-label-group'>\n                      <input\n                        className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                        id='inputEmail'\n                        placeholder='Email address'\n                        type='text'\n                        value={state.email}\n                        name='email'\n                        onChange={(e) => setState('email')(e.target.value)}\n                        required\n                      />\n                      <label htmlFor='inputEmail'>Email address</label>\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <div className='form-label-group'>\n                      <input\n                        type='password'\n                        className={'form-control ' + (state.authError ? 'is-invalid' : '')}\n                        id='inputPassword'\n                        value={state.password}\n                        placeholder='******'\n                        name='password'\n                        onChange={(e) => setState('password')(e.target.value)}\n                        required\n                      />\n                      <label htmlFor='inputPassword'>Password</label>\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <div className='form-label-group'>\n                      <ReactQuill placeholder='About' value={state.about} onChange={(value) => setState('about')(value)} />\n                    </div>\n                  </div>\n                </Card.Body>\n                <Card.Footer>\n                  <div className='text-right'>\n                    <Button onClick={handleUpdateSave}>Save</Button>\n                  </div>\n                </Card.Footer>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport Header from '../elements/header';\nimport Sidebar from '../elements/PatientSidebar';\nimport DocSidebar from '../elements/DoctorSideBar';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Modal } from 'react-bootstrap';\nimport { getAppointments, savePrescription } from '../apis';\nimport Avatar from 'react-avatar';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport rxIcon from '../assets/rxicon.png';\nimport { setItemHelper } from '../utils';\nimport ReactQuill from 'react-quill';\nimport ReactHtmlParser from 'react-html-parser';\nimport LoadingIndicator from '../components/LoadingIndicator';\n\nconst Appointments = () => {\n  const [appointments, setappointments] = useState([]);\n  const { user } = useSelector((s) => s.userDetails);\n\n  useEffect(() => {\n    fetchAppointments();\n    // eslint-disable-next-line\n  }, []);\n\n  const fetchAppointments = () => {\n    getAppointments({ id: user.id }).then((res) => {\n      if (res.success) {\n        setappointments(res.appointments);\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Header />\n      <div id='wrapper'>\n        {user.userTypeId === 2 ? <DocSidebar></DocSidebar> : <Sidebar></Sidebar>}\n        <div id='content-wrapper'>\n          <div className='container-fluid'>\n            <ol className='breadcrumb'>\n              <li className='breadcrumb-item'>\n                <Link to={'/appointments'}>Appointments</Link>\n              </li>\n            </ol>\n            <div className='container'>\n              <div className='row no-gutters justify-content-around mt-5'>\n                {appointments &&\n                  appointments.length > 0 &&\n                  appointments.map((d) => <AppointmentCard key={d.id} app={d} user={user} />)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AppointmentCard = ({ app, user }) => {\n  const [appointment, setappointment] = useState(app);\n  const doctor = appointment.doctor;\n  const patient = appointment.patient;\n  const slot = appointment.slot;\n  const [isModalOpen, setisModalOpen] = useState(false);\n  const [loading, setloading] = useState(false);\n\n  const setAppointment = setItemHelper(appointment, setappointment);\n\n  const handleSavePrescription = () => {\n    setloading(true);\n    savePrescription({\n      prescription: appointment.prescription,\n      appointmentId: app.id,\n    }).then((res) => {\n      if (res.success) {\n        setloading(false);\n        setisModalOpen(false);\n      } else {\n        return;\n      }\n    });\n  };\n\n  return (\n    <Card style={{ minHeight: '180px' }} className='col-5 mb-5 shadow'>\n      <div className='row no-gutters position-relative'>\n        <img src={rxIcon} alt='' height={'30px'} style={{ opacity: '0.6' }} className='position-absolute m-2' />\n        <div style={{ height: '100px' }} className=''></div>\n        {user.userTypeId === 1 && (\n          <div style={{ right: 0 }} className='position-absolute m-2'>\n            <div className='text-center'>\n              {!doctor.photo ? (\n                <Avatar color='#212529' round size={50} name={doctor.name} />\n              ) : (\n                <img\n                  width='50'\n                  height='50'\n                  style={{ borderRadius: '50%' }}\n                  src={`http://3.149.240.186:8000/api/image/${doctor.photo}`}\n                  alt=''\n                />\n              )}\n              <p className='mb-0'>Dr. {doctor.name}</p>\n              <div className='small text-muted'>{doctor.department && doctor.department.label}</div>\n            </div>\n          </div>\n        )}\n        {user.userTypeId === 2 && (\n          <div style={{ right: 0 }} className='position-absolute m-2'>\n            <div className='text-center'>\n              {!patient.photo ? (\n                <Avatar color='#212529' round size={50} name={patient.name} />\n              ) : (\n                <img\n                  width='50'\n                  height='50'\n                  style={{ borderRadius: '50%' }}\n                  src={`http://3.149.240.186:8000/api/image/${patient.photo}`}\n                  alt=''\n                />\n              )}\n              <p className='mb-0'>{patient.name}</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className='border-top p-2'>\n        <div className='row no-gutters'>\n          <div className='col border small p-1 text-center'>Patient details</div>\n        </div>\n        <div className='row no-gutters'>\n          <div className='col border small p-1 text-center'>\n            Name: <br /> {patient.name}\n          </div>\n          <div className='col border small p-1 text-center'>\n            Age: <br /> {moment().diff(patient.dob, 'years', false)} years\n          </div>\n          <div className='col border small p-1 text-center'>\n            Gender: <br /> {patient.gender}\n          </div>\n        </div>\n        <div className='row no-gutters'>\n          <div className='col border small p-2'>\n            Appointment Date: <br /> {moment(slot.startTime).format('DD/MM/YYYY hh:mm A')}\n          </div>\n          <div className='col border small p-2 text-right'>\n            Booked At: <br /> {moment(appointment.createdAt).format('DD/MM/YYYY hh:mm A')}\n          </div>\n        </div>\n        <p style={{ fontSize: '14px', fontWeight: '600' }} className='p-0 m-0 mt-1'>\n          Patient Description:\n        </p>\n        <div style={{ fontSize: '14px', height: '125px', overflow: 'scroll' }} className='text-justify'>\n          {ReactHtmlParser(appointment.description)}\n        </div>\n        {appointment.prescription && (\n          <div className='position-relative'>\n            {user.userTypeId === 2 && (\n              <div style={{ right: 0 }} className='position-absolute'>\n                <Button className='btn-sm' onClick={(e) => setisModalOpen(true)}>\n                  Edit\n                </Button>\n              </div>\n            )}\n            <p style={{ fontSize: '14px', fontWeight: '600' }} className='p-0 m-0 mt-1 border-top'>\n              Doctor prescription:\n            </p>\n            <div style={{ fontSize: '14px', height: '125px', overflow: 'scroll' }} className='text-justify'>\n              {ReactHtmlParser(appointment.prescription)}\n            </div>\n          </div>\n        )}\n        {user.userTypeId === 2 && !appointment.prescription && (\n          <div className='text-center border-top'>\n            <Button className=' mt-5' onClick={(e) => setisModalOpen(true)}>\n              Add Prescription\n            </Button>\n          </div>\n        )}\n      </div>\n      <Modal centered show={isModalOpen} onHide={(e) => setisModalOpen(false)}>\n        <Modal.Header closeButton>Add prescription for {patient.name}</Modal.Header>\n        <Modal.Body>\n          <ReactQuill value={appointment.prescription} onChange={setAppointment('prescription')} />\n        </Modal.Body>\n        <Modal.Footer>\n          <LoadingIndicator isLoading={loading}>\n            <div className='text-right'>\n              <Button onClick={handleSavePrescription} disabled={!appointment.prescription}>\n                Proceed\n              </Button>\n            </div>\n          </LoadingIndicator>\n        </Modal.Footer>\n      </Modal>\n    </Card>\n  );\n};\nexport default Appointments;\n","import React from 'react';\n\nimport Login from './pages/Login';\nimport Register from './pages/Register';\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport DoctorSearch from './pages/DoctorSearch';\nimport Profile from './pages/Profile';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Appointments from './pages/Appointments';\n\nexport default () => {\n  const { token, user } = useSelector((state) => state.userDetails);\n\n  let view;\n  \n  const unauthenticated = (\n    <Switch>\n      <Route exact path='/' component={Login} />\n      <Route path='/register' component={Register} />\n      <Route>\n        <Redirect to='/' />\n      </Route>\n    </Switch>\n  );\n  const doctor = (\n    <Switch>\n      <Route path='/profile' component={Profile} />\n      <Route path='/appointments' component={Appointments} />\n      <Route>\n        <Redirect to='/profile' />\n      </Route>\n    </Switch>\n  );\n\n  const patient = (\n    <Switch>\n      <Route path='/find-doctor' component={DoctorSearch} />\n      <Route path='/profile' component={Profile} />\n      <Route path='/appointments' component={Appointments} />\n      <Route>\n        <Redirect to='/find-doctor' />\n      </Route>\n    </Switch>\n  );\n\n  if (token && user.userTypeId === 2) {\n    view = doctor;\n  } else if (token && user.userTypeId === 1) {\n    view = patient;\n  } else {\n    view = unauthenticated;\n  }\n  return (\n    <div className='App'>\n      <Router>{view}</Router>\n    </div>\n  );\n};\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/sb-admin.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'react-quill/dist/quill.snow.css';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}